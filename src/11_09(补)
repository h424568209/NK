    import java.util.Stack;

    public class Main {
        static Stack<Integer> stack1 = new Stack<Integer>();
        static Stack<Integer> stack2 = new Stack<Integer>();
        //两个栈实现队列
        public void push(int node) {
            stack1.push(node);

        }

        public int pop() {
         if(stack2.isEmpty()){
             while(!stack1.isEmpty()){
                 stack2.push(stack1.pop());
             }
         }
         return stack2.pop();
        }
        //商品和等于40的数量
          private static int fun(int[] nums, int n, int v, int st) {
            if (v == 0) {
                return 1;
            }
            if (n == 0) {
                return 0;
            }else {
                return fun(nums,n-1,v-nums[st],st+1)
                        +fun(nums,n-1,v,st+1);
            }
        }
        public static void main(String[] args) {
          Scanner scanner = new Scanner(System.in);
            int kinds = scanner.nextInt();
            int[] nums = new int[kinds];
                for (int i = 0; i < kinds; i++) {
                    nums[i] = scanner.nextInt();
                }
                System.out.println(fun(nums, kinds, 40,0));
                //--------------------------------------------
            Main s = new Main();
            s.push(1);
            s.push(2);
            s.push(3);
            s.push(4);
            s.push(5);
            s.push(6);
            System.out.println(s.pop());

        }
    }
